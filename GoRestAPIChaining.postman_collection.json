{
	"info": {
		"_postman_id": "664eacbe-ebf5-47aa-9715-cf29aa8f31b7",
		"name": "GoRestAPIChaining",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3754838"
	},
	"item": [
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(pm.response.text());\r",
							"pm.environment.set(\"userID\", jsonData.id);\r",
							"\r",
							"\r",
							"pm.test(\"Validate that the Data was created\", () =>\r",
							"{\r",
							"pm.expect(pm.response.code).to.eql(201);\r",
							"}\r",
							");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var random = Math.random().toString(36).substring(2);\r",
							"\r",
							"var useremail = \"pep\" + random + \"@gmail.com\";\r",
							"\r",
							"var username = \"pep\" + random;\r",
							"\r",
							"pm.environment.set(\"email_envn\", useremail);\r",
							"pm.environment.set(\"name_envn\", username);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"{{name_envn}}\",\r\n\"gender\": \"male\",\r\n\"email\": \"{{email_envn}}\",\r\n\"status\": \"active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validating the Data that was created by comparing \r",
							"\r",
							"\r",
							"pm.test(\"Validating the data Fields match\", () =>\r",
							"{\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.expect(jsonData.id).to.eql(pm.environment.get(\"userID\"));\r",
							"pm.expect(jsonData.email).to.eql(pm.environment.get(\"email_envn\"));\r",
							"pm.expect(jsonData.name).to.eql(pm.environment.get(\"name_envn\"));\r",
							"}\r",
							");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{userID}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var random = Math.random().toString(36).substring(2);\r",
							"\r",
							"var useremail = \"pep\" + random + \"@gmail.com\";\r",
							"\r",
							"var username = \"pep\" + random;\r",
							"\r",
							"pm.environment.set(\"email_envn\", useremail);\r",
							"pm.environment.set(\"name_envn\", username);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate that the Data was created\", () =>\r",
							"{\r",
							"pm.expect(pm.response.code).to.eql(200);\r",
							"}\r",
							");\r",
							"\r",
							"\r",
							"// Validate that update to the data matches\r",
							"\r",
							"pm.test(\"Validating the data Fields match\", () =>\r",
							"{\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.expect(jsonData.id).to.eql(pm.environment.get(\"userID\"));\r",
							"pm.expect(jsonData.email).to.eql(pm.environment.get(\"email_envn\"));\r",
							"pm.expect(jsonData.name).to.eql(pm.environment.get(\"name_envn\"));\r",
							"}\r",
							");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"{{name_envn}}\",\r\n\"gender\": \"male\",\r\n\"email\": \"{{email_envn}}\",\r\n\"status\": \"active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{userID}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if Data has been deleted\", ()=>\r",
							"{\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"}\r",
							"\r",
							");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{userID}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "a88be600ea1479e41263d174e52835825c6d640b5375dcbf0a26c75353b2514e",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userID",
			"value": ""
		}
	]
}